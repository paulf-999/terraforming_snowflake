name: PR Validation

on:
  pull_request:
    paths:
      - terraform/**  # Trigger on changes in terraform directory
    branches:
      - '*'

env:
  TF_VAR_SNOWFLAKE_ORGANIZATION_NAME: ${{ secrets.TF_VAR_SNOWFLAKE_ORGANIZATION_NAME }}
  TF_VAR_SNOWFLAKE_ACCOUNT_NAME: ${{ secrets.TF_VAR_SNOWFLAKE_ACCOUNT_NAME }}
  TF_VAR_SNOWFLAKE_USER: ${{ secrets.TF_VAR_SNOWFLAKE_USER }}
  TF_VAR_SNOWFLAKE_PASSWORD: ${{ secrets.TF_VAR_SNOWFLAKE_PASSWORD }}
  TF_VAR_SNOWFLAKE_ROLE: ${{ secrets.TF_VAR_SNOWFLAKE_ROLE }}
  TF_VAR_SNOWFLAKE_WAREHOUSE: ${{ secrets.TF_VAR_SNOWFLAKE_WAREHOUSE }}

jobs:
  validate_dev_environment:
    name: DEV - Validate Terraform
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.head.ref, 'terraform/environments/dev/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Validate and Plan - Dev Environment
        run: |
          cd terraform/environments/dev && terraform init && terraform validate && terraform plan

  validate_uat_environment:
    name: UAT - Validate Terraform
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.head.ref, 'terraform/environments/uat/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Validate and Plan - UAT Environment
        run: |
          cd terraform/environments/uat && terraform init && terraform validate && terraform plan

  validate_prod_environment:
    name: PROD - Validate Terraform
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.head.ref, 'terraform/environments/prod/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Validate and Plan - Prod Environment
        run: |
          cd terraform/environments/prod && terraform init && terraform validate && terraform plan
